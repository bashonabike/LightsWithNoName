#include "ShapeType.h"
#include "FortuneLightsMkIDefines.h"

ShapeType::ShapeType() {
	//dummy instanciator
}
ShapeType::ShapeType(unsigned char newShapeType) {
	instanciate(newShapeType);
}

	void ShapeType::instanciate(unsigned char newShapeType) {
	shapetype = newShapeType;
	shapetype = 0;
	switch (shapetype) {
	case 0: //Blue Ice
		length = 18;
		numframes = 25;
		framerate = 2;
	case 1: //Purple Rain
		length = 9;
		numframes = 24;
		framerate = 1;
	case 2: //Blue meets Purple
		length = 8;
		numframes = 16;
		framerate = 2;
	case 3: //Purple meets Blue
		length = 8;
		numframes = 16;
		framerate = 1;
	}
	data = new CRGB*[length];
	for (unsigned char i = 0; i < length; i++) {
		data[i] = new CRGB[numframes];
	}

//	switch (shapetype) {
//	case 0: //Blue Ice
//#ifndef __GNUC__
//#pragma region BLUE_ICE
//#endif
		data[0][0] = CRGB(1, 8, 5);
		data[0][1] = CRGB(0, 9, 10);
		data[0][2] = CRGB(1, 9, 10);
		data[0][3] = CRGB(1, 8, 10);
		data[0][4] = CRGB(1, 8, 10);
		data[0][5] = CRGB(1, 8, 10);
		data[0][6] = CRGB(1, 8, 10);
		data[0][7] = CRGB(1, 8, 10);
		data[0][8] = CRGB(1, 7, 10);
		data[0][9] = CRGB(1, 7, 10);
		data[0][10] = CRGB(1, 7, 10);
		data[0][11] = CRGB(2, 7, 10);
		data[0][12] = CRGB(2, 6, 10);
		data[0][13] = CRGB(2, 6, 10);
		data[0][14] = CRGB(2, 6, 10);
		data[0][15] = CRGB(2, 6, 10);
		data[0][16] = CRGB(2, 6, 10);
		data[0][17] = CRGB(2, 5, 10);
		data[1][0] = CRGB(2, 15, 11);
		data[1][1] = CRGB(1, 18, 20);
		data[1][2] = CRGB(1, 17, 20);
		data[1][3] = CRGB(1, 17, 20);
		data[1][4] = CRGB(2, 16, 20);
		data[1][5] = CRGB(2, 16, 20);
		data[1][6] = CRGB(2, 16, 20);
		data[1][7] = CRGB(2, 15, 20);
		data[1][8] = CRGB(2, 15, 20);
		data[1][9] = CRGB(3, 14, 20);
		data[1][10] = CRGB(3, 14, 20);
		data[1][11] = CRGB(3, 13, 20);
		data[1][12] = CRGB(3, 13, 20);
		data[1][13] = CRGB(3, 12, 20);
		data[1][14] = CRGB(4, 12, 20);
		data[1][15] = CRGB(4, 12, 20);
		data[1][16] = CRGB(4, 11, 20);
		data[1][17] = CRGB(4, 11, 20);
		data[2][0] = CRGB(3, 23, 16);
		data[2][1] = CRGB(1, 27, 30);
		data[2][2] = CRGB(2, 26, 30);
		data[2][3] = CRGB(2, 25, 30);
		data[2][4] = CRGB(2, 25, 30);
		data[2][5] = CRGB(3, 24, 30);
		data[2][6] = CRGB(3, 23, 30);
		data[2][7] = CRGB(3, 23, 30);
		data[2][8] = CRGB(4, 22, 30);
		data[2][9] = CRGB(4, 21, 30);
		data[2][10] = CRGB(4, 21, 30);
		data[2][11] = CRGB(5, 20, 30);
		data[2][12] = CRGB(5, 19, 30);
		data[2][13] = CRGB(5, 19, 30);
		data[2][14] = CRGB(6, 18, 30);
		data[2][15] = CRGB(6, 17, 30);
		data[2][16] = CRGB(6, 17, 30);
		data[2][17] = CRGB(6, 16, 30);
		data[3][0] = CRGB(4, 31, 21);
		data[3][1] = CRGB(2, 36, 41);
		data[3][2] = CRGB(2, 35, 40);
		data[3][3] = CRGB(3, 34, 40);
		data[3][4] = CRGB(3, 33, 40);
		data[3][5] = CRGB(4, 32, 40);
		data[3][6] = CRGB(4, 31, 40);
		data[3][7] = CRGB(4, 30, 40);
		data[3][8] = CRGB(5, 29, 40);
		data[3][9] = CRGB(5, 28, 40);
		data[3][10] = CRGB(6, 28, 40);
		data[3][11] = CRGB(6, 27, 40);
		data[3][12] = CRGB(7, 26, 40);
		data[3][13] = CRGB(7, 25, 40);
		data[3][14] = CRGB(7, 24, 40);
		data[3][15] = CRGB(8, 23, 40);
		data[3][16] = CRGB(8, 22, 40);
		data[3][17] = CRGB(9, 21, 41);
		data[4][0] = CRGB(5, 38, 26);
			data[4][1] = CRGB(2, 44, 51);
		data[4][2] = CRGB(3, 43, 50);
		data[4][3] = CRGB(3, 42, 50);
		data[4][4] = CRGB(4, 41, 50);
		data[4][5] = CRGB(4, 40, 50);
		data[4][6] = CRGB(5, 39, 50);
		data[4][7] = CRGB(5, 38, 50);
		data[4][8] = CRGB(6, 37, 50);
		data[4][9] = CRGB(6, 35, 50);
		data[4][10] = CRGB(7, 34, 50);
		data[4][11] = CRGB(8, 33, 50);
			data[4][12] = CRGB(8, 32, 50);
		data[4][13] = CRGB(9, 31, 50);
		data[4][14] = CRGB(9, 30, 50);
		data[4][15] = CRGB(10, 29, 50);
		data[4][16] = CRGB(10, 28, 50);
			data[4][17] = CRGB(11, 27, 51);
					data[5][0] = CRGB(6, 46, 32);
			data[5][1] = CRGB(2, 53, 61);
				data[5][2] = CRGB(3, 52, 60);
			data[5][3] = CRGB(4, 51, 60);
			data[5][4] = CRGB(5, 49, 60);
		data[5][5] = CRGB(5, 48, 60);
		data[5][6] = CRGB(6, 47, 60);
		data[5][7] = CRGB(6, 45, 60);
		data[5][8] = CRGB(7, 44, 60);
		data[5][9] = CRGB(8, 42, 60);
		data[5][10] = CRGB(8, 41, 60);
		data[5][11] = CRGB(9, 40, 60);
		data[5][12] = CRGB(10, 38, 60);
		data[5][13] = CRGB(10, 37, 60);
		data[5][14] = CRGB(11, 36, 60);
		data[5][15] = CRGB(12, 35, 60);
		data[5][16] = CRGB(12, 33, 60);
		data[5][17] = CRGB(13, 32, 61);
		data[6][0] = CRGB(8, 53, 37);
		data[6][1] = CRGB(3, 62, 71);
		data[6][2] = CRGB(4, 60, 71);
			data[6][3] = CRGB(4, 59, 71);
		data[6][4] = CRGB(5, 57, 71);
		data[6][5] = CRGB(6, 56, 71);
		data[6][6] = CRGB(7, 54, 71);
		data[6][7] = CRGB(8, 53, 71);
		data[6][8] = CRGB(8, 51, 71);
		data[6][9] = CRGB(9, 50, 71);
		data[6][10] = CRGB(10, 48, 71);
		data[6][11] = CRGB(11, 46, 71);
		data[6][12] = CRGB(11, 45, 71);
		data[6][13] = CRGB(12, 43, 71);
		data[6][14] = CRGB(13, 42, 71);
		data[6][15] = CRGB(14, 40, 71);
		data[6][16] = CRGB(14, 39, 71);
		data[6][17] = CRGB(15, 37, 71);
		data[7][0] = CRGB(9, 61, 42);
		data[7][1] = CRGB(3, 71, 81);
		data[7][2] = CRGB(4, 69, 81);
		data[7][3] = CRGB(5, 68, 81);
		data[7][4] = CRGB(6, 66, 81);
		data[7][5] = CRGB(7, 64, 81);
		data[7][6] = CRGB(8, 62, 81);
		data[7][7] = CRGB(9, 60, 81);
		data[7][8] = CRGB(10, 59, 81);
		data[7][9] = CRGB(10, 57, 81);
		data[7][10] = CRGB(11, 55, 81);
		/*	data[7][11] = CRGB(12, 53, 81);
		data[7][12] = CRGB(13, 51, 81);
		data[7][13] = CRGB(14, 50, 81);
		data[7][14] = CRGB(15, 48, 81);
		data[7][15] = CRGB(16, 46, 81);
		data[7][16] = CRGB(16, 44, 81);
		data[7][17] = CRGB(17, 43, 81);
		data[8][0] = CRGB(10, 69, 48);
		data[8][1] = CRGB(4, 80, 91);
		data[8][2] = CRGB(5, 78, 91);
		data[8][3] = CRGB(6, 76, 91);
		data[8][4] = CRGB(7, 74, 91);
		data[8][5] = CRGB(8, 72, 91);
		data[8][6] = CRGB(9, 70, 91);
		data[8][7] = CRGB(10, 68, 91);
		data[8][8] = CRGB(11, 66, 91);
			data[8][9] = CRGB(12, 64, 91);
		data[8][10] = CRGB(13, 62, 91);
		data[8][11] = CRGB(14, 60, 91);
		data[8][12] = CRGB(15, 58, 91);
		data[8][13] = CRGB(15, 56, 91);
		data[8][14] = CRGB(17, 54, 91);
		data[8][15] = CRGB(18, 52, 91);
		data[8][16] = CRGB(18, 50, 91);
		data[8][17] = CRGB(19, 48, 91);
		data[9][0] = CRGB(11, 76, 53);
		data[9][1] = CRGB(4, 89, 102);
		data[9][2] = CRGB(5, 86, 101);
		data[9][3] = CRGB(6, 84, 101);
		data[9][4] = CRGB(8, 82, 101);
		data[9][5] = CRGB(9, 80, 101);
		data[9][6] = CRGB(10, 78, 101);
		data[9][7] = CRGB(11, 75, 101);
		data[9][8] = CRGB(12, 73, 101);
		data[9][9] = CRGB(13, 71, 101);
		data[9][10] = CRGB(14, 69, 101);
		data[9][11] = CRGB(15, 66, 101);
		data[9][12] = CRGB(16, 64, 101);
		data[9][13] = CRGB(17, 62, 101);
		data[9][14] = CRGB(18, 60, 101);
		data[9][15] = CRGB(20, 58, 101);
		data[9][16] = CRGB(20, 55, 101);
		data[9][17] = CRGB(22, 53, 102);
		data[10][0] = CRGB(12, 84, 58);
		data[10][1] = CRGB(4, 98, 112);
		data[10][2] = CRGB(6, 95, 111);
		data[10][3] = CRGB(7, 93, 111);
		data[10][4] = CRGB(8, 90, 111);
		data[10][5] = CRGB(10, 88, 111);
		data[10][6] = CRGB(11, 85, 111);
		data[10][7] = CRGB(12, 83, 111);
		data[10][8] = CRGB(13, 81, 111);
		data[10][9] = CRGB(14, 78, 111);
		data[10][10] = CRGB(15, 76, 111);
		data[10][11] = CRGB(17, 73, 111);
		data[10][12] = CRGB(18, 70, 111);
		data[10][13] = CRGB(19, 68, 111);
		data[10][14] = CRGB(20, 66, 111);
		data[10][15] = CRGB(22, 63, 111);
		data[10][16] = CRGB(22, 61, 111);
		data[10][17] = CRGB(24, 59, 112);
		data[11][0] = CRGB(13, 92, 63);
		data[11][1] = CRGB(5, 107, 122);
		data[11][2] = CRGB(6, 104, 121);
		data[11][3] = CRGB(8, 101, 121);
		data[11][4] = CRGB(9, 98, 121);
		data[11][5] = CRGB(11, 96, 121);
		data[11][6] = CRGB(12, 93, 121);
		data[11][7] = CRGB(13, 90, 121);
		data[11][8] = CRGB(14, 88, 121);
		data[11][9] = CRGB(15, 85, 121);
		data[11][10] = CRGB(17, 83, 121);
		data[11][11] = CRGB(18, 80, 121);
		data[11][12] = CRGB(20, 77, 121);
		data[11][13] = CRGB(21, 74, 121);
		data[11][14] = CRGB(22, 72, 121);
		data[11][15] = CRGB(24, 69, 121);
		data[11][16] = CRGB(24, 66, 121);
		data[11][17] = CRGB(26, 64, 122);
		data[12][0] = CRGB(14, 99, 69);
		data[12][1] = CRGB(5, 115, 132);
		data[12][2] = CRGB(7, 112, 131);
		data[12][3] = CRGB(8, 110, 131);
		data[12][4] = CRGB(10, 107, 131);
		data[12][5] = CRGB(11, 104, 131);
		data[12][6] = CRGB(12, 101, 131);
			data[12][7] = CRGB(14, 98, 131);
		data[12][8] = CRGB(16, 95, 131);
		data[12][9] = CRGB(17, 92, 131);
		data[12][10] = CRGB(18, 89, 131);
		data[12][11] = CRGB(20, 86, 131);
		data[12][12] = CRGB(21, 83, 131);
		data[12][13] = CRGB(22, 81, 131);
		data[12][14] = CRGB(24, 77, 131);
		data[12][15] = CRGB(25, 75, 131);
		data[12][16] = CRGB(27, 72, 131);
		data[12][17] = CRGB(28, 69, 132);
		data[13][0] = CRGB(15, 107, 74);
		data[13][1] = CRGB(6, 124, 142);
		data[13][2] = CRGB(7, 121, 141);
		data[13][3] = CRGB(9, 118, 141);
		data[13][4] = CRGB(11, 115, 141);
		data[13][5] = CRGB(12, 112, 141);
		data[13][6] = CRGB(13, 109, 141);
		data[13][7] = CRGB(15, 105, 141);
		data[13][8] = CRGB(17, 102, 141);
		data[13][9] = CRGB(18, 99, 141);
		data[13][10] = CRGB(20, 96, 141);
		data[13][11] = CRGB(21, 93, 141);
		data[13][12] = CRGB(23, 90, 141);
		data[13][13] = CRGB(24, 87, 141);
		data[13][14] = CRGB(26, 83, 141);
		data[13][15] = CRGB(27, 81, 141);
		data[13][16] = CRGB(29, 77, 141);
		data[13][17] = CRGB(30, 74, 142);
		data[14][0] = CRGB(16, 115, 79);
		data[14][1] = CRGB(6, 133, 152);
		data[14][2] = CRGB(8, 130, 151);
		data[14][3] = CRGB(10, 127, 151);
		data[14][4] = CRGB(11, 123, 151);
		data[14][5] = CRGB(13, 120, 151);
		data[14][6] = CRGB(14, 116, 151);
		data[14][7] = CRGB(16, 113, 151);
		data[14][8] = CRGB(18, 110, 151);
		data[14][9] = CRGB(19, 106, 151);
		data[14][10] = CRGB(21, 103, 151);
		data[14][11] = CRGB(23, 100, 151);
		data[14][12] = CRGB(25, 96, 151);
		data[14][13] = CRGB(26, 93, 151);
		data[14][14] = CRGB(28, 89, 151);
		data[14][15] = CRGB(29, 86, 151);
		data[14][16] = CRGB(31, 83, 151);
		data[14][17] = CRGB(32, 80, 152);
		data[15][0] = CRGB(17, 122, 84);
		data[15][1] = CRGB(6, 142, 163);
		data[15][2] = CRGB(8, 138, 161);
		data[15][3] = CRGB(10, 135, 161);
		data[15][4] = CRGB(12, 131, 161);
		data[15][5] = CRGB(14, 128, 161);
		data[15][6] = CRGB(15, 124, 161);
		data[15][7] = CRGB(17, 120, 161);
		data[15][8] = CRGB(19, 117, 161);
		data[15][9] = CRGB(20, 113, 161);
		data[15][10] = CRGB(22, 110, 161);
		data[15][11] = CRGB(24, 106, 161);
		data[15][12] = CRGB(26, 102, 161);
		data[15][13] = CRGB(28, 99, 161);
		data[15][14] = CRGB(29, 95, 161);
		data[15][15] = CRGB(31, 92, 161);
		data[15][16] = CRGB(33, 88, 161);
		data[15][17] = CRGB(35, 85, 163);
		data[16][0] = CRGB(18, 130, 90);
		data[16][1] = CRGB(7, 151, 173);
		data[16][2] = CRGB(9, 147, 171);
		data[16][3] = CRGB(11, 143, 171);
		data[16][4] = CRGB(13, 139, 171);
		data[16][5] = CRGB(15, 136, 171);
		data[16][6] = CRGB(16, 132, 171);
		data[16][7] = CRGB(18, 128, 171);
		data[16][8] = CRGB(20, 124, 171);
		data[16][9] = CRGB(22, 120, 171);
		data[16][10] = CRGB(24, 117, 171);
		data[16][11] = CRGB(26, 113, 171);
		data[16][12] = CRGB(28, 109, 171);
		data[16][13] = CRGB(29, 105, 171);
		data[16][14] = CRGB(31, 101, 171);
		data[16][15] = CRGB(33, 98, 171);
		data[16][16] = CRGB(35, 94, 171);
		data[16][17] = CRGB(37, 90, 173);
		data[17][0] = CRGB(19, 138, 95);
		data[17][1] = CRGB(7, 160, 183);
		data[17][2] = CRGB(9, 156, 181);
		data[17][3] = CRGB(12, 152, 181);
		data[17][4] = CRGB(14, 148, 181);
		data[17][5] = CRGB(16, 144, 181);
		data[17][6] = CRGB(17, 140, 181);
		data[17][7] = CRGB(19, 135, 181);
		data[17][8] = CRGB(22, 132, 181);
		data[17][9] = CRGB(23, 127, 181);
		data[17][10] = CRGB(25, 124, 181);
		data[17][11] = CRGB(27, 120, 181);
		data[17][12] = CRGB(30, 115, 181);
		data[17][13] = CRGB(31, 112, 181);
		data[17][14] = CRGB(33, 107, 181);
		data[17][15] = CRGB(35, 104, 181);
		data[17][16] = CRGB(37, 99, 181);
		data[17][17] = CRGB(39, 96, 183);
		data[18][0] = CRGB(21, 145, 100);
		data[18][1] = CRGB(8, 169, 193);
		data[18][2] = CRGB(10, 164, 192);
		data[18][3] = CRGB(12, 160, 192);
		data[18][4] = CRGB(14, 156, 192);
		data[18][5] = CRGB(17, 152, 192);
		data[18][6] = CRGB(18, 147, 192);
		data[18][7] = CRGB(21, 143, 192);
		data[18][8] = CRGB(23, 139, 192);
		data[18][9] = CRGB(24, 135, 192);
		data[18][10] = CRGB(27, 131, 192);
		data[18][11] = CRGB(29, 126, 192);
		data[18][12] = CRGB(31, 122, 192);
		data[18][13] = CRGB(33, 118, 192);
		data[18][14] = CRGB(35, 113, 192);
		data[18][15] = CRGB(37, 109, 192);
		data[18][16] = CRGB(39, 105, 192);
		data[18][17] = CRGB(41, 101, 193);
		data[19][0] = CRGB(22, 153, 106);
		data[19][1] = CRGB(8, 178, 203);
		data[19][2] = CRGB(10, 173, 202);
		data[19][3] = CRGB(13, 169, 202);
		data[19][4] = CRGB(15, 164, 202);
		data[19][5] = CRGB(18, 160, 202);
		data[19][6] = CRGB(19, 155, 202);
		data[19][7] = CRGB(22, 150, 202);
		data[19][8] = CRGB(24, 146, 202);
		data[19][9] = CRGB(26, 142, 202);
		data[19][10] = CRGB(28, 138, 202);
		data[19][11] = CRGB(30, 133, 202);
		data[19][12] = CRGB(33, 128, 202);
		data[19][13] = CRGB(34, 124, 202);
		data[19][14] = CRGB(37, 119, 202);
		data[19][15] = CRGB(39, 115, 202);
		data[19][16] = CRGB(41, 110, 202);
		data[19][17] = CRGB(43, 106, 203);
		data[20][0] = CRGB(23, 160, 111);
		data[20][1] = CRGB(8, 186, 213);
		data[20][2] = CRGB(11, 181, 212);
		data[20][3] = CRGB(13, 177, 212);
		data[20][4] = CRGB(16, 172, 212);
		data[20][5] = CRGB(18, 168, 212);
		data[20][6] = CRGB(20, 163, 212);
		data[20][7] = CRGB(23, 158, 212);
		data[20][8] = CRGB(25, 154, 212);
		data[20][9] = CRGB(27, 149, 212);
		data[20][10] = CRGB(29, 144, 212);
		data[20][11] = CRGB(32, 139, 212);
		data[20][12] = CRGB(34, 134, 212);
		data[20][13] = CRGB(36, 130, 212);
		data[20][14] = CRGB(39, 125, 212);
		data[20][15] = CRGB(41, 121, 212);
		data[20][16] = CRGB(43, 116, 212);
		data[20][17] = CRGB(45, 112, 213);
		data[21][0] = CRGB(24, 168, 116);
		data[21][1] = CRGB(9, 195, 224);
		data[21][2] = CRGB(11, 190, 222);
		data[21][3] = CRGB(14, 186, 222);
		data[21][4] = CRGB(17, 180, 222);
		data[21][5] = CRGB(19, 176, 222);
		data[21][6] = CRGB(21, 171, 222);
		data[21][7] = CRGB(24, 165, 222);
		data[21][8] = CRGB(26, 161, 222);
		data[21][9] = CRGB(28, 156, 222);
		data[21][10] = CRGB(31, 151, 222);
		data[21][11] = CRGB(33, 146, 222);
		data[21][12] = CRGB(36, 141, 222);
		data[21][13] = CRGB(38, 136, 222);
		data[21][14] = CRGB(40, 131, 222);
		data[21][15] = CRGB(43, 127, 222);
		data[21][16] = CRGB(45, 121, 222);
		data[21][17] = CRGB(48, 117, 224);
		data[22][0] = CRGB(25, 176, 121);
		data[22][1] = CRGB(9, 204, 234);
		data[22][2] = CRGB(12, 199, 232);
		data[22][3] = CRGB(15, 194, 232);
		data[22][4] = CRGB(17, 189, 232);
		data[22][5] = CRGB(20, 184, 232);
		data[22][6] = CRGB(22, 178, 232);
		data[22][7] = CRGB(25, 173, 232);
		data[22][8] = CRGB(28, 168, 232);
		data[22][9] = CRGB(29, 163, 232);
		data[22][10] = CRGB(32, 158, 232);
		data[22][11] = CRGB(35, 153, 232);
		data[22][12] = CRGB(38, 147, 232);
		data[22][13] = CRGB(40, 143, 232);
		data[22][14] = CRGB(42, 137, 232);
		data[22][15] = CRGB(45, 132, 232);
		data[22][16] = CRGB(47, 127, 232);
		data[22][17] = CRGB(50, 122, 234);
		data[23][0] = CRGB(26, 183, 127);
		data[23][1] = CRGB(10, 213, 244);
		data[23][2] = CRGB(12, 207, 242);
		data[23][3] = CRGB(15, 203, 242);
		data[23][4] = CRGB(18, 197, 242);
		data[23][5] = CRGB(21, 192, 242);
		data[23][6] = CRGB(23, 186, 242);
		data[23][7] = CRGB(26, 180, 242);
		data[23][8] = CRGB(29, 176, 242);
		data[23][9] = CRGB(31, 170, 242);
		data[23][10] = CRGB(34, 165, 242);
		data[23][11] = CRGB(36, 159, 242);
		data[23][12] = CRGB(39, 154, 242);
		data[23][13] = CRGB(41, 149, 242);
		data[23][14] = CRGB(44, 143, 242);
		data[23][15] = CRGB(47, 138, 242);
		data[23][16] = CRGB(49, 132, 242);
		data[23][17] = CRGB(52, 128, 244);
		data[24][0] = CRGB(27, 191, 132);
		data[24][1] = CRGB(10, 222, 254);
		data[24][2] = CRGB(13, 216, 252);
		data[24][3] = CRGB(16, 211, 252);
		data[24][4] = CRGB(19, 205, 252);
		data[24][5] = CRGB(22, 200, 252);
		data[24][6] = CRGB(24, 194, 252);
		data[24][7] = CRGB(27, 188, 252);
		data[24][8] = CRGB(30, 183, 252);
		data[24][9] = CRGB(32, 177, 252);
		data[24][10] = CRGB(35, 172, 252);
		data[24][11] = CRGB(38, 166, 252);
		data[24][12] = CRGB(41, 160, 252);
		data[24][13] = CRGB(43, 155, 252);
		data[24][14] = CRGB(46, 149, 252);
		data[24][15] = CRGB(49, 144, 252);
		data[24][16] = CRGB(51, 138, 252);
		data[24][17] = CRGB(54, 133, 254);*/
//
//#ifndef __GNUC__
//#pragma endregion BLUE_ICE
//#endif
//	case 1: //Purple Rain
//
//#ifndef __GNUC__
//#pragma region PURPLE_RAIN
//#endif
//			//TEMP
//		data[0][0] = CRGB(11, 5, 6);
//		data[0][1] = CRGB(3, 1, 10);
//		data[0][2] = CRGB(4, 1, 10);
//		data[0][3] = CRGB(4, 1, 9);
//		data[0][4] = CRGB(4, 1, 9);
//		data[0][5] = CRGB(4, 1, 9);
//		data[0][6] = CRGB(4, 1, 8);
//		data[0][7] = CRGB(6, 1, 8);
//		data[0][8] = CRGB(7, 1, 8);
//		data[1][0] = CRGB(21, 10, 11);
//		data[1][1] = CRGB(7, 2, 20);
//		data[1][2] = CRGB(8, 2, 20);
//		data[1][3] = CRGB(8, 2, 19);
//		data[1][4] = CRGB(8, 3, 18);
//		data[1][5] = CRGB(8, 3, 17);
//		data[1][6] = CRGB(9, 3, 17);
//		data[1][7] = CRGB(11, 3, 16);
//		data[1][8] = CRGB(13, 2, 16);
//		data[2][0] = CRGB(32, 15, 17);
//		data[2][1] = CRGB(10, 2, 31);
//		data[2][2] = CRGB(12, 3, 29);
//		data[2][3] = CRGB(12, 3, 28);
//		data[2][4] = CRGB(12, 4, 27);
//		data[2][5] = CRGB(13, 4, 26);
//		data[2][6] = CRGB(13, 4, 25);
//		data[2][7] = CRGB(17, 4, 24);
//		data[2][8] = CRGB(20, 3, 24);
//		data[3][0] = CRGB(43, 20, 22);
//		data[3][1] = CRGB(14, 3, 41);
//		data[3][2] = CRGB(17, 4, 39);
//		data[3][3] = CRGB(17, 5, 38);
//		data[3][4] = CRGB(17, 5, 36);
//		data[3][5] = CRGB(17, 6, 34);
//		data[3][6] = CRGB(18, 6, 33);
//		data[3][7] = CRGB(22, 5, 32);
//		data[3][8] = CRGB(27, 5, 32);
//		data[4][0] = CRGB(53, 24, 28);
//		data[4][1] = CRGB(17, 4, 51);
//		data[4][2] = CRGB(21, 5, 49);
//		data[4][3] = CRGB(21, 6, 47);
//		data[4][4] = CRGB(21, 6, 45);
//		data[4][5] = CRGB(21, 7, 43);
//		data[4][6] = CRGB(22, 7, 41);
//		data[4][7] = CRGB(28, 6, 40);
//		data[4][8] = CRGB(34, 6, 39);
//		data[5][0] = CRGB(64, 29, 34);
//		data[5][1] = CRGB(21, 5, 61);
//		data[5][2] = CRGB(25, 6, 59);
//		data[5][3] = CRGB(25, 7, 56);
//		data[5][4] = CRGB(25, 8, 54);
//		data[5][5] = CRGB(25, 8, 52);
//		data[5][6] = CRGB(27, 9, 50);
//		data[5][7] = CRGB(33, 8, 48);
//		data[5][8] = CRGB(40, 7, 47);
//		data[6][0] = CRGB(74, 34, 39);
//		data[6][1] = CRGB(24, 5, 71);
//		data[6][2] = CRGB(29, 7, 68);
//		data[6][3] = CRGB(29, 8, 66);
//		data[6][4] = CRGB(29, 9, 63);
//		data[6][5] = CRGB(29, 10, 60);
//		data[6][6] = CRGB(31, 10, 58);
//		data[6][7] = CRGB(39, 9, 56);
//		data[6][8] = CRGB(47, 8, 55);
//		data[7][0] = CRGB(85, 39, 45);
//		data[7][1] = CRGB(28, 6, 82);
//		data[7][2] = CRGB(33, 8, 78);
//		data[7][3] = CRGB(33, 9, 75);
//		data[7][4] = CRGB(33, 10, 72);
//		data[7][5] = CRGB(33, 11, 69);
//		data[7][6] = CRGB(36, 12, 66);
//		data[7][7] = CRGB(44, 10, 64);
//		data[7][8] = CRGB(54, 9, 63);
//		data[8][0] = CRGB(96, 44, 50);
//		data[8][1] = CRGB(31, 7, 92);
//		data[8][2] = CRGB(37, 9, 88);
//		data[8][3] = CRGB(37, 10, 84);
//		data[8][4] = CRGB(37, 11, 81);
//		data[8][5] = CRGB(38, 12, 77);
//		data[8][6] = CRGB(40, 13, 74);
//		data[8][7] = CRGB(50, 12, 72);
//		data[8][8] = CRGB(60, 10, 71);
//		data[9][0] = CRGB(106, 49, 56);
//		data[9][1] = CRGB(35, 8, 102);
//		data[9][2] = CRGB(41, 10, 98);
//		data[9][3] = CRGB(41, 11, 94);
//		data[9][4] = CRGB(41, 13, 90);
//		data[9][5] = CRGB(42, 14, 86);
//		data[9][6] = CRGB(45, 15, 83);
//		data[9][7] = CRGB(55, 13, 80);
//		data[9][8] = CRGB(67, 11, 79);
//		data[10][0] = CRGB(117, 54, 61);
//		data[10][1] = CRGB(38, 8, 112);
//		data[10][2] = CRGB(45, 11, 107);
//		data[10][3] = CRGB(45, 12, 103);
//		data[10][4] = CRGB(45, 14, 99);
//		data[10][5] = CRGB(46, 15, 94);
//		data[10][6] = CRGB(49, 16, 91);
//		data[10][7] = CRGB(61, 14, 88);
//		data[10][8] = CRGB(74, 12, 87);
//		data[11][0] = CRGB(128, 59, 67);
//		data[11][1] = CRGB(42, 9, 123);
//		data[11][2] = CRGB(50, 12, 117);
//		data[11][3] = CRGB(50, 14, 113);
//		data[11][4] = CRGB(50, 15, 108);
//		data[11][5] = CRGB(50, 17, 103);
//		data[11][6] = CRGB(54, 18, 99);
//		data[11][7] = CRGB(67, 16, 97);
//		data[11][8] = CRGB(81, 14, 95);
//		data[12][0] = CRGB(138, 63, 73);
//		data[12][1] = CRGB(45, 10, 133);
//		data[12][2] = CRGB(54, 13, 127);
//		data[12][3] = CRGB(54, 15, 122);
//		data[12][4] = CRGB(54, 16, 116);
//		data[12][5] = CRGB(54, 18, 112);
//		data[12][6] = CRGB(58, 19, 107);
//		data[12][7] = CRGB(72, 17, 105);
//		data[12][8] = CRGB(87, 15, 102);
//		data[13][0] = CRGB(149, 68, 78);
//		data[13][1] = CRGB(48, 11, 143);
//		data[13][2] = CRGB(58, 14, 137);
//		data[13][3] = CRGB(58, 16, 131);
//		data[13][4] = CRGB(58, 18, 125);
//		data[13][5] = CRGB(58, 19, 120);
//		data[13][6] = CRGB(62, 20, 116);
//		data[13][7] = CRGB(78, 18, 113);
//		data[13][8] = CRGB(94, 16, 110);
//		data[14][0] = CRGB(159, 73, 84);
//		data[14][1] = CRGB(52, 11, 153);
//		data[14][2] = CRGB(62, 15, 146);
//		data[14][3] = CRGB(62, 17, 141);
//		data[14][4] = CRGB(62, 19, 134);
//		data[14][5] = CRGB(63, 21, 129);
//		data[14][6] = CRGB(67, 22, 124);
//		data[14][7] = CRGB(83, 19, 121);
//		data[14][8] = CRGB(101, 17, 118);
//		data[15][0] = CRGB(170, 78, 89);
//		data[15][1] = CRGB(55, 12, 163);
//		data[15][2] = CRGB(66, 16, 156);
//		data[15][3] = CRGB(66, 18, 150);
//		data[15][4] = CRGB(66, 20, 143);
//		data[15][5] = CRGB(67, 22, 137);
//		data[15][6] = CRGB(71, 23, 132);
//		data[15][7] = CRGB(89, 21, 129);
//		data[15][8] = CRGB(107, 18, 126);
//		data[16][0] = CRGB(181, 83, 95);
//		data[16][1] = CRGB(59, 13, 174);
//		data[16][2] = CRGB(70, 17, 166);
//		data[16][3] = CRGB(70, 19, 159);
//		data[16][4] = CRGB(70, 21, 152);
//		data[16][5] = CRGB(71, 23, 146);
//		data[16][6] = CRGB(76, 25, 140);
//		data[16][7] = CRGB(94, 22, 137);
//		data[16][8] = CRGB(114, 19, 134);
//		data[17][0] = CRGB(191, 88, 101);
//		data[17][1] = CRGB(62, 14, 184);
//		data[17][2] = CRGB(74, 18, 176);
//		data[17][3] = CRGB(74, 20, 169);
//		data[17][4] = CRGB(74, 23, 161);
//		data[17][5] = CRGB(75, 25, 155);
//		data[17][6] = CRGB(80, 26, 149);
//		data[17][7] = CRGB(100, 23, 145);
//		data[17][8] = CRGB(121, 20, 142);
//		data[18][0] = CRGB(202, 93, 106);
//		data[18][1] = CRGB(66, 14, 194);
//		data[18][2] = CRGB(78, 19, 185);
//		data[18][3] = CRGB(78, 21, 178);
//		data[18][4] = CRGB(78, 24, 170);
//		data[18][5] = CRGB(79, 26, 163);
//		data[18][6] = CRGB(85, 28, 157);
//		data[18][7] = CRGB(105, 25, 153);
//		data[18][8] = CRGB(127, 21, 150);
//		data[19][0] = CRGB(213, 98, 112);
//		data[19][1] = CRGB(69, 15, 204);
//		data[19][2] = CRGB(83, 20, 195);
//		data[19][3] = CRGB(83, 23, 188);
//		data[19][4] = CRGB(83, 25, 179);
//		data[19][5] = CRGB(83, 28, 172);
//		data[19][6] = CRGB(89, 29, 165);
//		data[19][7] = CRGB(111, 26, 161);
//		data[19][8] = CRGB(134, 23, 158);
//		data[20][0] = CRGB(223, 102, 117);
//		data[20][1] = CRGB(73, 16, 214);
//		data[20][2] = CRGB(87, 21, 205);
//		data[20][3] = CRGB(87, 24, 197);
//		data[20][4] = CRGB(87, 26, 188);
//		data[20][5] = CRGB(88, 29, 180);
//		data[20][6] = CRGB(94, 31, 173);
//		data[20][7] = CRGB(116, 27, 169);
//		data[20][8] = CRGB(141, 24, 165);
//		data[21][0] = CRGB(234, 107, 123);
//		data[21][1] = CRGB(76, 17, 225);
//		data[21][2] = CRGB(91, 22, 215);
//		data[21][3] = CRGB(91, 25, 206);
//		data[21][4] = CRGB(91, 28, 197);
//		data[21][5] = CRGB(92, 30, 189);
//		data[21][6] = CRGB(98, 32, 182);
//		data[21][7] = CRGB(122, 28, 177);
//		data[21][8] = CRGB(148, 25, 173);
//		data[22][0] = CRGB(244, 112, 128);
//		data[22][1] = CRGB(80, 17, 235);
//		data[22][2] = CRGB(95, 23, 224);
//		data[22][3] = CRGB(95, 26, 216);
//		data[22][4] = CRGB(95, 29, 206);
//		data[22][5] = CRGB(96, 32, 197);
//		data[22][6] = CRGB(103, 34, 190);
//		data[22][7] = CRGB(127, 30, 185);
//		data[22][8] = CRGB(154, 26, 181);
//		data[23][0] = CRGB(255, 117, 134);
//		data[23][1] = CRGB(83, 18, 245);
//		data[23][2] = CRGB(99, 24, 234);
//		data[23][3] = CRGB(99, 27, 225);
//		data[23][4] = CRGB(99, 30, 215);
//		data[23][5] = CRGB(100, 33, 206);
//		data[23][6] = CRGB(107, 35, 198);
//		data[23][7] = CRGB(133, 31, 193);
//		data[23][8] = CRGB(161, 27, 189);
//		//TEMP
//
//#ifndef __GNUC__
//#pragma endregion PURPLE_RAIN
//#endif
//	case 2: //Blue meets Purple
//
//#ifndef __GNUC__
//#pragma region BLUE_TO_PURPLE
//#endif
//			//TEMP
//		data[0][0] = CRGB(0, 16, 10);
//		data[0][1] = CRGB(0, 10, 12);
//		data[0][2] = CRGB(0, 6, 7);
//		data[0][3] = CRGB(0, 3, 3);
//		data[0][4] = CRGB(0, 0, 0);
//		data[0][5] = CRGB(1, 0, 1);
//		data[0][6] = CRGB(2, 1, 4);
//		data[0][7] = CRGB(3, 3, 6);
//		data[0][8] = CRGB(5, 4, 9);
//		data[0][9] = CRGB(6, 5, 11);
//		data[1][0] = CRGB(0, 32, 19);
//		data[1][1] = CRGB(0, 19, 23);
//		data[1][2] = CRGB(0, 13, 14);
//		data[1][3] = CRGB(1, 5, 6);
//		data[1][4] = CRGB(0, 0, 0);
//		data[1][5] = CRGB(1, 1, 2);
//		data[1][6] = CRGB(4, 3, 7);
//		data[1][7] = CRGB(7, 5, 12);
//		data[1][8] = CRGB(10, 7, 18);
//		data[1][9] = CRGB(13, 9, 23);
//		data[2][0] = CRGB(0, 48, 29);
//		data[2][1] = CRGB(0, 29, 35);
//		data[2][2] = CRGB(1, 19, 22);
//		data[2][3] = CRGB(1, 8, 9);
//		data[2][4] = CRGB(1, 0, 0);
//		data[2][5] = CRGB(2, 1, 3);
//		data[2][6] = CRGB(6, 4, 11);
//		data[2][7] = CRGB(10, 8, 18);
//		data[2][8] = CRGB(15, 11, 26);
//		data[2][9] = CRGB(19, 14, 34);
//		data[3][0] = CRGB(0, 64, 38);
//		data[3][1] = CRGB(0, 39, 46);
//		data[3][2] = CRGB(1, 25, 29);
//		data[3][3] = CRGB(1, 10, 12);
//		data[3][4] = CRGB(1, 1, 1);
//		data[3][5] = CRGB(2, 2, 4);
//		data[3][6] = CRGB(8, 6, 14);
//		data[3][7] = CRGB(14, 10, 25);
//		data[3][8] = CRGB(20, 15, 35);
//		data[3][9] = CRGB(25, 19, 45);
//		data[4][0] = CRGB(0, 80, 48);
//		data[4][1] = CRGB(0, 48, 58);
//		data[4][2] = CRGB(1, 31, 36);
//		data[4][3] = CRGB(1, 13, 14);
//		data[4][4] = CRGB(1, 1, 1);
//		data[4][5] = CRGB(3, 2, 5);
//		data[4][6] = CRGB(10, 7, 18);
//		data[4][7] = CRGB(17, 13, 31);
//		data[4][8] = CRGB(24, 18, 44);
//		data[4][9] = CRGB(32, 23, 57);
//		data[5][0] = CRGB(0, 96, 57);
//		data[5][1] = CRGB(0, 58, 69);
//		data[5][2] = CRGB(1, 38, 43);
//		data[5][3] = CRGB(2, 15, 17);
//		data[5][4] = CRGB(1, 1, 1);
//		data[5][5] = CRGB(3, 2, 6);
//		data[5][6] = CRGB(12, 9, 21);
//		data[5][7] = CRGB(21, 15, 37);
//		data[5][8] = CRGB(29, 22, 53);
//		data[5][9] = CRGB(38, 28, 68);
//		data[6][0] = CRGB(0, 112, 67);
//		data[6][1] = CRGB(0, 68, 81);
//		data[6][2] = CRGB(1, 44, 50);
//		data[6][3] = CRGB(2, 18, 20);
//		data[6][4] = CRGB(1, 1, 1);
//		data[6][5] = CRGB(4, 3, 7);
//		data[6][6] = CRGB(14, 10, 25);
//		data[6][7] = CRGB(24, 18, 43);
//		data[6][8] = CRGB(34, 25, 61);
//		data[6][9] = CRGB(44, 33, 79);
//		data[7][0] = CRGB(0, 128, 76);
//		data[7][1] = CRGB(1, 78, 93);
//		data[7][2] = CRGB(2, 50, 58);
//		data[7][3] = CRGB(2, 20, 23);
//		data[7][4] = CRGB(2, 1, 1);
//		data[7][5] = CRGB(4, 3, 8);
//		data[7][6] = CRGB(16, 12, 29);
//		data[7][7] = CRGB(28, 21, 49);
//		data[7][8] = CRGB(39, 29, 70);
//		data[7][9] = CRGB(51, 38, 91);
//		data[8][0] = CRGB(0, 143, 86);
//		data[8][1] = CRGB(1, 87, 104);
//		data[8][2] = CRGB(2, 56, 65);
//		data[8][3] = CRGB(2, 23, 26);
//		data[8][4] = CRGB(2, 1, 1);
//		data[8][5] = CRGB(5, 3, 8);
//		data[8][6] = CRGB(18, 13, 32);
//		data[8][7] = CRGB(31, 23, 55);
//		data[8][8] = CRGB(44, 33, 79);
//		data[8][9] = CRGB(57, 42, 102);
//		data[9][0] = CRGB(0, 159, 95);
//		data[9][1] = CRGB(1, 97, 116);
//		data[9][2] = CRGB(2, 63, 72);
//		data[9][3] = CRGB(3, 25, 29);
//		data[9][4] = CRGB(2, 1, 1);
//		data[9][5] = CRGB(5, 4, 9);
//		data[9][6] = CRGB(20, 14, 36);
//		data[9][7] = CRGB(34, 26, 61);
//		data[9][8] = CRGB(49, 36, 88);
//		data[9][9] = CRGB(63, 47, 113);
//		data[10][0] = CRGB(0, 175, 105);
//		data[10][1] = CRGB(1, 107, 127);
//		data[10][2] = CRGB(2, 69, 79);
//		data[10][3] = CRGB(3, 28, 32);
//		data[10][4] = CRGB(2, 1, 1);
//		data[10][5] = CRGB(6, 4, 10);
//		data[10][6] = CRGB(22, 16, 39);
//		data[10][7] = CRGB(38, 28, 67);
//		data[10][8] = CRGB(54, 40, 96);
//		data[10][9] = CRGB(69, 52, 124);
//		data[11][0] = CRGB(0, 191, 114);
//		data[11][1] = CRGB(1, 116, 139);
//		data[11][2] = CRGB(2, 75, 86);
//		data[11][3] = CRGB(3, 30, 35);
//		data[11][4] = CRGB(2, 2, 2);
//		data[11][5] = CRGB(6, 5, 11);
//		data[11][6] = CRGB(24, 17, 43);
//		data[11][7] = CRGB(41, 31, 74);
//		data[11][8] = CRGB(59, 44, 105);
//		data[11][9] = CRGB(76, 56, 136);
//		data[12][0] = CRGB(0, 207, 124);
//		data[12][1] = CRGB(1, 126, 150);
//		data[12][2] = CRGB(2, 81, 93);
//		data[12][3] = CRGB(3, 33, 37);
//		data[12][4] = CRGB(2, 2, 2);
//		data[12][5] = CRGB(7, 5, 12);
//		data[12][6] = CRGB(26, 19, 46);
//		data[12][7] = CRGB(45, 33, 80);
//		data[12][8] = CRGB(63, 47, 114);
//		data[12][9] = CRGB(82, 61, 147);
//		data[13][0] = CRGB(0, 223, 133);
//		data[13][1] = CRGB(1, 136, 162);
//		data[13][2] = CRGB(3, 88, 101);
//		data[13][3] = CRGB(4, 35, 40);
//		data[13][4] = CRGB(3, 2, 2);
//		data[13][5] = CRGB(7, 5, 13);
//		data[13][6] = CRGB(28, 20, 50);
//		data[13][7] = CRGB(48, 36, 86);
//		data[13][8] = CRGB(68, 51, 123);
//		data[13][9] = CRGB(88, 66, 158);
//		data[14][0] = CRGB(0, 239, 143);
//		data[14][1] = CRGB(1, 145, 173);
//		data[14][2] = CRGB(3, 94, 108);
//		data[14][3] = CRGB(4, 38, 43);
//		data[14][4] = CRGB(3, 2, 2);
//		data[14][5] = CRGB(8, 6, 14);
//		data[14][6] = CRGB(30, 22, 53);
//		data[14][7] = CRGB(52, 38, 92);
//		data[14][8] = CRGB(73, 54, 131);
//		data[14][9] = CRGB(95, 70, 170);
//		data[15][0] = CRGB(0, 255, 152);
//		data[15][1] = CRGB(1, 155, 185);
//		data[15][2] = CRGB(3, 100, 115);
//		data[15][3] = CRGB(4, 40, 46);
//		data[15][4] = CRGB(3, 2, 2);
//		data[15][5] = CRGB(8, 6, 15);
//		data[15][6] = CRGB(32, 23, 57);
//		data[15][7] = CRGB(55, 41, 98);
//		data[15][8] = CRGB(78, 58, 140);
//		data[15][9] = CRGB(101, 75, 181);
//		//TEMP
//#ifndef __GNUC__
//#pragma endregion BLUE_MEETS_PURPLE
//#endif
//	case 3: //Purple meets Blue
//
//#ifndef __GNUC__
//#pragma region PURPLE_MEETS_BLUE
//#endif
//		data[0][0] = CRGB(16, 16, 16);
//		data[0][1] = CRGB(5, 4, 11);
//		data[0][2] = CRGB(5, 4, 9);
//		data[0][3] = CRGB(3, 3, 6);
//		data[0][4] = CRGB(2, 1, 4);
//		data[0][5] = CRGB(1, 0, 1);
//		data[0][6] = CRGB(0, 0, 0);
//		data[0][7] = CRGB(0, 3, 3);
//		data[0][8] = CRGB(0, 6, 7);
//		data[0][9] = CRGB(0, 10, 12);
//		data[1][0] = CRGB(32, 32, 32);
//		data[1][1] = CRGB(11, 8, 22);
//		data[1][2] = CRGB(10, 7, 17);
//		data[1][3] = CRGB(7, 5, 12);
//		data[1][4] = CRGB(4, 3, 7);
//		data[1][5] = CRGB(1, 1, 2);
//		data[1][6] = CRGB(0, 0, 0);
//		data[1][7] = CRGB(1, 5, 6);
//		data[1][8] = CRGB(0, 13, 15);
//		data[1][9] = CRGB(0, 20, 23);
//		data[2][0] = CRGB(48, 48, 48);
//		data[2][1] = CRGB(16, 12, 33);
//		data[2][2] = CRGB(15, 11, 26);
//		data[2][3] = CRGB(10, 8, 18);
//		data[2][4] = CRGB(6, 4, 11);
//		data[2][5] = CRGB(2, 1, 3);
//		data[2][6] = CRGB(1, 0, 0);
//		data[2][7] = CRGB(1, 8, 9);
//		data[2][8] = CRGB(1, 19, 22);
//		data[2][9] = CRGB(0, 30, 35);
//		data[3][0] = CRGB(64, 64, 64);
//		data[3][1] = CRGB(21, 16, 45);
//		data[3][2] = CRGB(20, 15, 35);
//		data[3][3] = CRGB(14, 10, 25);
//		data[3][4] = CRGB(8, 6, 14);
//		data[3][5] = CRGB(2, 2, 4);
//		data[3][6] = CRGB(1, 1, 1);
//		data[3][7] = CRGB(1, 10, 12);
//		data[3][8] = CRGB(1, 25, 29);
//		data[3][9] = CRGB(0, 40, 46);
//		data[4][0] = CRGB(80, 80, 80);
//		data[4][1] = CRGB(27, 20, 56);
//		data[4][2] = CRGB(24, 18, 43);
//		data[4][3] = CRGB(17, 13, 31);
//		data[4][4] = CRGB(10, 7, 18);
//		data[4][5] = CRGB(3, 2, 4);
//		data[4][6] = CRGB(1, 1, 1);
//		data[4][7] = CRGB(1, 13, 15);
//		data[4][8] = CRGB(1, 32, 36);
//		data[4][9] = CRGB(0, 50, 58);
//		data[5][0] = CRGB(96, 96, 96);
//		data[5][1] = CRGB(32, 24, 67);
//		data[5][2] = CRGB(29, 22, 52);
//		data[5][3] = CRGB(21, 15, 37);
//		data[5][4] = CRGB(12, 9, 21);
//		data[5][5] = CRGB(3, 2, 5);
//		data[5][6] = CRGB(1, 1, 1);
//		data[5][7] = CRGB(2, 15, 18);
//		data[5][8] = CRGB(1, 38, 44);
//		data[5][9] = CRGB(0, 60, 69);
//		data[6][0] = CRGB(112, 112, 112);
//		data[6][1] = CRGB(37, 28, 78);
//		data[6][2] = CRGB(34, 25, 61);
//		data[6][3] = CRGB(24, 18, 43);
//		data[6][4] = CRGB(14, 10, 25);
//		data[6][5] = CRGB(4, 3, 6);
//		data[6][6] = CRGB(1, 1, 1);
//		data[6][7] = CRGB(2, 18, 21);
//		data[6][8] = CRGB(1, 44, 51);
//		data[6][9] = CRGB(0, 70, 81);
//		data[7][0] = CRGB(128, 128, 128);
//		data[7][1] = CRGB(43, 32, 89);
//		data[7][2] = CRGB(39, 29, 70);
//		data[7][3] = CRGB(28, 20, 49);
//		data[7][4] = CRGB(16, 12, 28);
//		data[7][5] = CRGB(4, 3, 7);
//		data[7][6] = CRGB(2, 1, 1);
//		data[7][7] = CRGB(2, 21, 24);
//		data[7][8] = CRGB(2, 51, 58);
//		data[7][9] = CRGB(1, 80, 93);
//		data[8][0] = CRGB(143, 143, 143);
//		data[8][1] = CRGB(48, 35, 100);
//		data[8][2] = CRGB(44, 33, 78);
//		data[8][3] = CRGB(31, 23, 55);
//		data[8][4] = CRGB(18, 13, 32);
//		data[8][5] = CRGB(5, 3, 8);
//		data[8][6] = CRGB(2, 1, 1);
//		data[8][7] = CRGB(2, 23, 26);
//		data[8][8] = CRGB(2, 57, 65);
//		data[8][9] = CRGB(1, 90, 104);
//		data[9][0] = CRGB(159, 159, 159);
//		data[9][1] = CRGB(53, 39, 111);
//		data[9][2] = CRGB(49, 36, 87);
//		data[9][3] = CRGB(34, 25, 61);
//		data[9][4] = CRGB(20, 14, 35);
//		data[9][5] = CRGB(5, 4, 9);
//		data[9][6] = CRGB(2, 1, 1);
//		data[9][7] = CRGB(3, 26, 29);
//		data[9][8] = CRGB(2, 63, 73);
//		data[9][9] = CRGB(1, 100, 116);
//		data[10][0] = CRGB(175, 175, 175);
//		data[10][1] = CRGB(58, 43, 122);
//		data[10][2] = CRGB(54, 40, 96);
//		data[10][3] = CRGB(38, 28, 67);
//		data[10][4] = CRGB(22, 16, 39);
//		data[10][5] = CRGB(6, 4, 10);
//		data[10][6] = CRGB(2, 1, 1);
//		data[10][7] = CRGB(3, 28, 32);
//		data[10][8] = CRGB(2, 69, 80);
//		data[10][9] = CRGB(1, 110, 127);
//		data[11][0] = CRGB(191, 191, 191);
//		data[11][1] = CRGB(64, 47, 134);
//		data[11][2] = CRGB(59, 44, 104);
//		data[11][3] = CRGB(41, 30, 74);
//		data[11][4] = CRGB(24, 17, 42);
//		data[11][5] = CRGB(6, 5, 11);
//		data[11][6] = CRGB(2, 2, 2);
//		data[11][7] = CRGB(3, 31, 35);
//		data[11][8] = CRGB(2, 76, 87);
//		data[11][9] = CRGB(1, 120, 139);
//		data[12][0] = CRGB(207, 207, 207);
//		data[12][1] = CRGB(69, 51, 145);
//		data[12][2] = CRGB(63, 47, 113);
//		data[12][3] = CRGB(45, 33, 80);
//		data[12][4] = CRGB(26, 19, 46);
//		data[12][5] = CRGB(7, 5, 11);
//		data[12][6] = CRGB(2, 2, 2);
//		data[12][7] = CRGB(3, 33, 38);
//		data[12][8] = CRGB(2, 82, 94);
//		data[12][9] = CRGB(1, 130, 150);
//		data[13][0] = CRGB(223, 223, 223);
//		data[13][1] = CRGB(74, 55, 156);
//		data[13][2] = CRGB(68, 51, 122);
//		data[13][3] = CRGB(48, 35, 86);
//		data[13][4] = CRGB(28, 20, 49);
//		data[13][5] = CRGB(7, 5, 12);
//		data[13][6] = CRGB(3, 2, 2);
//		data[13][7] = CRGB(4, 36, 41);
//		data[13][8] = CRGB(3, 88, 102);
//		data[13][9] = CRGB(1, 140, 162);
//		data[14][0] = CRGB(239, 239, 239);
//		data[14][1] = CRGB(80, 59, 167);
//		data[14][2] = CRGB(73, 54, 130);
//		data[14][3] = CRGB(52, 38, 92);
//		data[14][4] = CRGB(30, 22, 53);
//		data[14][5] = CRGB(8, 6, 13);
//		data[14][6] = CRGB(3, 2, 2);
//		data[14][7] = CRGB(4, 38, 44);
//		data[14][8] = CRGB(3, 95, 109);
//		data[14][9] = CRGB(1, 150, 173);
//		data[15][0] = CRGB(255, 255, 255);
//		data[15][1] = CRGB(85, 63, 178);
//		data[15][2] = CRGB(78, 58, 139);
//		data[15][3] = CRGB(55, 40, 98);
//		data[15][4] = CRGB(32, 23, 56);
//		data[15][5] = CRGB(8, 6, 14);
//		data[15][6] = CRGB(3, 2, 2);
//		data[15][7] = CRGB(4, 41, 47);
//		data[15][8] = CRGB(3, 101, 116);
//		data[15][9] = CRGB(1, 160, 185);
//
//#ifndef __GNUC__
//#pragma endregion PURPLE_MEETS_BLUE
//#endif
//	}
}